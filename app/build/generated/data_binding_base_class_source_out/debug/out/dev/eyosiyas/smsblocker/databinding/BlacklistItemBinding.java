// Generated by view binder compiler. Do not edit!
package dev.eyosiyas.smsblocker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import dev.eyosiyas.smsblocker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BlacklistItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView imgDeleteNumber;

  @NonNull
  public final ImageView imgEditNumber;

  @NonNull
  public final TextView txtBlacklistNumber;

  @NonNull
  public final TextView txtBlacklistTimestamp;

  private BlacklistItemBinding(@NonNull CardView rootView, @NonNull ImageView imgDeleteNumber,
      @NonNull ImageView imgEditNumber, @NonNull TextView txtBlacklistNumber,
      @NonNull TextView txtBlacklistTimestamp) {
    this.rootView = rootView;
    this.imgDeleteNumber = imgDeleteNumber;
    this.imgEditNumber = imgEditNumber;
    this.txtBlacklistNumber = txtBlacklistNumber;
    this.txtBlacklistTimestamp = txtBlacklistTimestamp;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static BlacklistItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BlacklistItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.blacklist_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BlacklistItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgDeleteNumber;
      ImageView imgDeleteNumber = rootView.findViewById(id);
      if (imgDeleteNumber == null) {
        break missingId;
      }

      id = R.id.imgEditNumber;
      ImageView imgEditNumber = rootView.findViewById(id);
      if (imgEditNumber == null) {
        break missingId;
      }

      id = R.id.txtBlacklistNumber;
      TextView txtBlacklistNumber = rootView.findViewById(id);
      if (txtBlacklistNumber == null) {
        break missingId;
      }

      id = R.id.txtBlacklistTimestamp;
      TextView txtBlacklistTimestamp = rootView.findViewById(id);
      if (txtBlacklistTimestamp == null) {
        break missingId;
      }

      return new BlacklistItemBinding((CardView) rootView, imgDeleteNumber, imgEditNumber,
          txtBlacklistNumber, txtBlacklistTimestamp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
