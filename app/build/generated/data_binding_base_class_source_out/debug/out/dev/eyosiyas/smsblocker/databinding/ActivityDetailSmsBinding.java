// Generated by view binder compiler. Do not edit!
package dev.eyosiyas.smsblocker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import dev.eyosiyas.smsblocker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailSmsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnSendMessage;

  @NonNull
  public final RecyclerView detailMessageRecyclerView;

  @NonNull
  public final Toolbar detailToolbar;

  @NonNull
  public final EditText editMessageBox;

  private ActivityDetailSmsBinding(@NonNull RelativeLayout rootView, @NonNull Button btnSendMessage,
      @NonNull RecyclerView detailMessageRecyclerView, @NonNull Toolbar detailToolbar,
      @NonNull EditText editMessageBox) {
    this.rootView = rootView;
    this.btnSendMessage = btnSendMessage;
    this.detailMessageRecyclerView = detailMessageRecyclerView;
    this.detailToolbar = detailToolbar;
    this.editMessageBox = editMessageBox;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailSmsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailSmsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detail_sms, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailSmsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSendMessage;
      Button btnSendMessage = rootView.findViewById(id);
      if (btnSendMessage == null) {
        break missingId;
      }

      id = R.id.detailMessageRecyclerView;
      RecyclerView detailMessageRecyclerView = rootView.findViewById(id);
      if (detailMessageRecyclerView == null) {
        break missingId;
      }

      id = R.id.detailToolbar;
      Toolbar detailToolbar = rootView.findViewById(id);
      if (detailToolbar == null) {
        break missingId;
      }

      id = R.id.editMessageBox;
      EditText editMessageBox = rootView.findViewById(id);
      if (editMessageBox == null) {
        break missingId;
      }

      return new ActivityDetailSmsBinding((RelativeLayout) rootView, btnSendMessage,
          detailMessageRecyclerView, detailToolbar, editMessageBox);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
