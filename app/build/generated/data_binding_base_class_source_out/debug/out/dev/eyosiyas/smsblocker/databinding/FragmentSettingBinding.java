// Generated by view binder compiler. Do not edit!
package dev.eyosiyas.smsblocker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.viewbinding.ViewBinding;
import dev.eyosiyas.smsblocker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button btnChangeRule;

  @NonNull
  public final Button btnKeyword;

  @NonNull
  public final EditText editEndsWith;

  @NonNull
  public final EditText editStartsWith;

  @NonNull
  public final SwitchCompat nuclearOption;

  private FragmentSettingBinding(@NonNull FrameLayout rootView, @NonNull Button btnChangeRule,
      @NonNull Button btnKeyword, @NonNull EditText editEndsWith, @NonNull EditText editStartsWith,
      @NonNull SwitchCompat nuclearOption) {
    this.rootView = rootView;
    this.btnChangeRule = btnChangeRule;
    this.btnKeyword = btnKeyword;
    this.editEndsWith = editEndsWith;
    this.editStartsWith = editStartsWith;
    this.nuclearOption = nuclearOption;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_setting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnChangeRule;
      Button btnChangeRule = rootView.findViewById(id);
      if (btnChangeRule == null) {
        break missingId;
      }

      id = R.id.btnKeyword;
      Button btnKeyword = rootView.findViewById(id);
      if (btnKeyword == null) {
        break missingId;
      }

      id = R.id.editEndsWith;
      EditText editEndsWith = rootView.findViewById(id);
      if (editEndsWith == null) {
        break missingId;
      }

      id = R.id.editStartsWith;
      EditText editStartsWith = rootView.findViewById(id);
      if (editStartsWith == null) {
        break missingId;
      }

      id = R.id.nuclearOption;
      SwitchCompat nuclearOption = rootView.findViewById(id);
      if (nuclearOption == null) {
        break missingId;
      }

      return new FragmentSettingBinding((FrameLayout) rootView, btnChangeRule, btnKeyword,
          editEndsWith, editStartsWith, nuclearOption);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
